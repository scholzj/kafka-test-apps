apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: kafka-test-apps-job
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 3
  config:
      retention.bytes: 1073741824
      retention.ms: 86400000
      segment.bytes: 1073741824
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaUser
metadata:
  name: kafka-test-apps-job-producer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: topic
          name: kafka-test-apps-job
        operations: [ Write, Create, Describe ]
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaUser
metadata:
  name: kafka-test-apps-job-consumer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
      - resource:
          type: topic
          name: kafka-test-apps-job
        operations: [ Read, Describe ]
      - resource:
          type: group
          name: my-kafka-consumer-job
        operations: [ Read ]
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: kafka-producer-job
  name: kafka-producer-job
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: kafka-producer-job
    spec:
      containers:
      - name: kafka-producer-job
        image: ghcr.io/scholzj/kafka-producer:latest
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        env:
          - name: CA_CRT
            valueFrom:
              secretKeyRef:
                name: my-cluster-cluster-ca-cert
                key: ca.crt
          - name: USER_CRT
            valueFrom:
              secretKeyRef:
                name: kafka-test-apps-job-producer
                key: user.crt
          - name: USER_KEY
            valueFrom:
              secretKeyRef:
                name: kafka-test-apps-job-producer
                key: user.key
          - name: BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9093
          - name: TOPIC
            value: kafka-test-apps-job
          - name: TIMER
            value: "20"
          - name: NUMBER_OF_KEYS
            value: "3"
          - name: MESSAGE_COUNT
            value: "1000000"
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: kafka-consumer-job
  name: kafka-consumer-job
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: kafka-consumer-job
    spec:
      containers:
      - name: kafka-consumer-job
        image: ghcr.io/scholzj/kafka-consumer:latest
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        env:
          - name: CA_CRT
            valueFrom:
              secretKeyRef:
                name: my-cluster-cluster-ca-cert
                key: ca.crt
          - name: USER_CRT
            valueFrom:
              secretKeyRef:
                name: kafka-test-apps-job-consumer
                key: user.crt
          - name: USER_KEY
            valueFrom:
              secretKeyRef:
                name: kafka-test-apps-job-consumer
                key: user.key
          - name: BOOTSTRAP_SERVERS
            value: my-cluster-kafka-bootstrap:9093
          - name: TOPIC
            value: kafka-test-apps-job
          - name: GROUP_ID
            value: my-kafka-consumer-job
          - name: MESSAGE_COUNT
            value: "1000000"
      restartPolicy: OnFailure
